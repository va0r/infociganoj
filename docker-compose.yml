version: '3'

services:

  redis:
    image: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=ghjcnjq77
#      - PGDATA=/var/lib/postgresql/14/main
      - PGDATA=/var/lib/postgresql/data/pgdata

    env_file:
      - .env
    volumes:
#      - pg_data:/var/lib/postgresql/14/main
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d infociganoj" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py loaddata users_data.json ; \
                    python3 manage.py loaddata courses_data.json ; \
                    python3 manage.py loaddata payment_data.json ; \
                    python3 manage.py runserver 0.0.0.0:8000"
#    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    restart: always
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  pg_data:

